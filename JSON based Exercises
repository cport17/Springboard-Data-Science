'''JSON exercise
Using data in file 'data/world_bank_projects.json' and the techniques demonstrated above,
Find the 10 countries with most projects
Find the top 10 major project themes (using column 'mjtheme_namecode')
In 2. above you will notice that some entries have only the code and the name is missing. Create a dataframe with the missing names filled in.'''


import numpy as np
import pandas as pd
import json
from pandas.io.json import json_normalize

#load the data as a dataframe
json_data = pd.read_json('data/world_bank_projects.json')

#use value_counts to return top 10 countries 
json_data['countryname'].value_counts()[:10]

#Africa is not a country, so get next highest country and drop Africa
top_countries = json_data['countryname'].value_counts()[:11].drop('Africa')
top_countries

#load json as string to normalize 'mjtheme_namecode' column
json_str = json.load((open('data/world_bank_projects.json')))
themes = json_normalize(json_str, 'mjtheme_namecode')

#sort columns by code to fill missing name columns
themes = themes.sort_values('code')

#replace empty strings with nan in order to ffill, filled_names is dataframe with the missing names filled in
filled_names = themes.replace('', np.nan).fillna(method='bfill')

#check to make sure name.value_counts correspond to code.value_counts
print(themes['code'].value_counts(), filled_names['name'].value_counts())
top_themes = filled_names['name'].value_counts()[:10]
top_themes
